version: '3.8'

services:

  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports: 
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend 
    
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: events_db
    volumes:
      - mongo_data:/data/db
    networks:
      - backend
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports: 
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    
  user-service:
    build: ./UserService
    container_name: user-service
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:123456@postgres_db:5432/user_service_db
    ports: 
      - "8000:8000"
    networks:
      - backend
  
  event-service:
    build: ./EventService
    container_name: event-service
    restart: always
    depends_on: 
      - mongodb
    environment:
      MONGO_URI: mongodb://mongodb:27017/events_db
    ports:
      - "5002:5002"
    networks:
      - backend
  
  booking-service:
    build: ./BookingService
    container_name: booking-service
    restart: always
    depends_on: 
      - postgres
      - rabbitmq
    environment:
      DATABASE_URL: postgres://postgres:123456@host.docker.internal:5432/booking_db
    ports:
      - "5003:5003"
    networks:
      - backend

  payment-service:
    build: ./PaymentService
    container_name: payment-service
    restart: always
    depends_on: 
      - postgres
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:123456@postgres_db:5432/booking_db
    ports:
      - "5004:5004"
    networks:
      - backend
  
  notification-service:
    build: ./NotificationService
    container_name: notification-service
    restart: always
    depends_on: 
      - rabbitmq
      - mongodb
    environment:
      MONGO_URI: mongodb://mongodb:27017/notification_service
      RABBITMQ_URL: "amqp://rabbitmq
    networks:
      - backend

  frontend:
    build: ./event-booking-frontend
    container_name: frontend
    restart: always
    depends_on: 
      - user-service
      - booking-service
      - event-service
      - notification-service
      - payment-service
    ports: 
      - "3000:80"
    networks:
      - backend
      - frontend-network

volumes:
  postgres_data:
  mongo_data:

networks:
  backend:
  frontend-network:


